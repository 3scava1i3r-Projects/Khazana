{"version":3,"sources":["Header.js","utils/firebase.js","images/undraw_travel_together_re_kjf2.png","images/undraw_reading_0re1.png","images/undraw_security_o890.png","screens/Login.js","images/hedera.png","screens/Home.js","screens/LoginContext.js","screens/PrivateKey.js","screens/Color.js","screens/Mnemonic.js","component/Card.js","screens/Event.js","component/TicketCard.js","screens/TicketList.js","screens/CreateToken.js","component/ColorCard.js","screens/MyColor.js","component/NFTCard.js","screens/NFT.js","component/DNFTCard.js","screens/DNFT.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","to","src","alt","type","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","Login","al","a","client","Client","forTestnet","setOperator","PrivateKey","generate","privateKey","publicKey","console","log","transaction","AccountCreateTransaction","setKey","setInitialBalance","Hbar","execute","txResponse","getReceipt","receipt","newAccountId","accountId","firestore","collection","doc","toString","set","PbKey","PKey","AccId","AccTickets","CreatedTickets","then","catch","error","alert","id","Card","Img","variant","img3","Body","Title","Button","color","img1","onClick","img2","Home","style","backgroundSize","backgroundImage","hed","backgroundPosition","LoginContext","createContext","PK","useContext","setPrKey","prKey","history","useHistory","onSubmit","e","length","push","Box","component","m","onChange","target","value","placeholder","title","Color","useState","r","setR","g","setG","b","setB","localStorage","setItem","getItem","styleObj","backgroundColor","Name","Sym","Desc","Amt","Price","PbAdd","TknId","PRK","SetTkn","H","setH","NPrKey","fromString","NPblKey","get","NAccId","data","Cl","TopicCreateTransaction","setSubmitKey","newTopicId","topicId","TopicMessageSubmitTransaction","message","TokenCreateTransaction","setTokenName","setTokenSymbol","setTreasuryAccountId","setInitialSupply","freezeWith","loltxn","sign","txn","signtxn","lolreceipt","tokenId","Symbol","Amount","Description","TokenId","Creator","min","max","Mne","Mn","SetMn","preventDefault","Mnemonic","mnemonic","toPrivateKey","SellerAccId","SellerPrKey","Cardl","props","Numb","SetNumb","numb","K","buy","TokenAssociateTransaction","setAccountId","setTokenIds","signTx","transactionStatus","status","TransferTransaction","addTokenTransfer","tx","txResponse1","receipt1","transactionStatus1","addHbarTransfer","sign2","txResponse2","receipt2","Skylink","Text","OverlayTrigger","placement","overlay","Tooltip","ref","triggerHandler","Image","roundedCircle","height","width","Event","SetK","useEffect","onSnapshot","snapshot","docs","map","index","TicketCard","T","slice","bgColor","fgColor","level","justify","margin","Input","TicketList","SetT","hala","AccountBalanceQuery","query","tokens","key","update","FieldValue","arrayUnion","CreateToken","Tkn","File","SetFile","inputEvent","name","files","pv","Nft","Dnft","file","cl","SkynetClient","uploadFile","sl","skylink","substring","Form","Group","as","Row","controlId","Label","column","sm","Col","Control","span","offset","ColorCard","MyColor","NFTCard","NFT","DNFTCard","DNFT","App","Provider","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10ca67c0.chunk.js","sourcesContent":["import React,{useContext} from 'react';\r\nimport './Header.css';\r\nimport { Link } from 'react-router-dom';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\n\r\nexport default function Header() {\r\n    \r\n    return (\r\n      <nav className=\"header\">\r\n        <Link to=\"/home\">\r\n          <img\r\n            className=\"header_logo\"\r\n            src=\"https://external-content.duckduckgo.com/iu/?u=http%3A%2F%2Fglobaltassels.org%2Ffiles%2F2016%2F03%2Fgt-product-logo-ticket.gif&f=1&nofb=1\"\r\n            alt=\"logo\"\r\n          />\r\n        </Link>\r\n        <div className=\"header_searchbar\">\r\n          <input type=\"text\" className=\"header_search\" />\r\n          <SearchIcon className=\"header_search_icon\" />\r\n        </div>\r\n\r\n        <div className=\"header_navigation\">\r\n          <Link to=\"/ticket\" className=\"header_link\">\r\n            <div className=\"header_options\">\r\n              <span className=\"h\">My Tickets</span>\r\n            </div>\r\n          </Link>\r\n          <Link to=\"/create\" className=\"header_link\">\r\n            <div className=\"header_options\">\r\n              <span className=\"h\">Create</span>\r\n            </div>\r\n          </Link>\r\n          {/* <Link to='/login' className='header_link'>\r\n                <div className=\"header_options\">\r\n                    <span className=\"h\">Sell</span>\r\n                    \r\n                </div>\r\n                \r\n            </Link> */}\r\n          <Link to=\"/market\" className=\"header_link\">\r\n            <div className=\"header_options\">\r\n              <span className=\"h\">Market</span>\r\n            </div>\r\n          </Link>\r\n          <Link to=\"/nft\" className=\"header_link\">\r\n            <div className=\"header_options\">\r\n              <span className=\"h\">NFT Market</span>\r\n            </div>\r\n          </Link>\r\n          <Link to=\"/dnft\" className=\"header_link\">\r\n            <div className=\"header_options\">\r\n              <span className=\"h\">DNFT Market</span>\r\n            </div>\r\n          </Link>\r\n          <Link to=\"/color\" className=\"header_link\">\r\n            <div className=\"header_options\">\r\n              <span className=\"h\">Color</span>\r\n            </div>\r\n          </Link>\r\n          <Link to=\"/MyColor\" className=\"header_link\">\r\n            <div className=\"header_options\">\r\n              <span className=\"h\">MyColor</span>\r\n            </div>\r\n          </Link>\r\n          <Link to=\"/login\" className=\"header_link\">\r\n            <div className=\"header_options\">\r\n              <span className=\"h\">LogOut</span>\r\n            </div>\r\n          </Link>\r\n        </div>\r\n      </nav>\r\n    );\r\n}\r\n","import firebase from 'firebase';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDuTW_5KJc9PJxiE-vWZ8NR9zb3P_NbS30\",\r\n    authDomain: \"khazana-ht.firebaseapp.com\",\r\n    projectId: \"khazana-ht\",\r\n    storageBucket: \"khazana-ht.appspot.com\",\r\n    messagingSenderId: \"981788211252\",\r\n    appId: \"1:981788211252:web:3e175fb3575ff762b43261\",\r\n    measurementId: \"G-W7DSJ9Z88B\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.analytics();\r\n\r\n\r\n\r\n  export default firebase;","export default __webpack_public_path__ + \"static/media/undraw_travel_together_re_kjf2.1bef55ff.png\";","export default __webpack_public_path__ + \"static/media/undraw_reading_0re1.8dc2561e.png\";","export default __webpack_public_path__ + \"static/media/undraw_security_o890.e13c5b25.png\";","import React from 'react';\r\nimport {Box ,Button} from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { PrivateKey , Client , Hbar , AccountCreateTransaction, PublicKey } from '@hashgraph/sdk';\r\nimport { Card,Image } from \"react-bootstrap\";\r\nimport firebase from '../utils/firebase';\r\nimport img1 from '../images/undraw_travel_together_re_kjf2.png';\r\nimport img2 from '../images/undraw_reading_0re1.png';\r\nimport img3 from '../images/undraw_security_o890.png';\r\n\r\n\r\nimport './Login.css'\r\n\r\n\r\nexport default function Login() {\r\n\r\n\r\n    const myAccountId = \"0.0.303460\";\r\n    const myPrivateKey =\r\n      \"302e020100300506032b6570042204201026b742d1ee8cb5a0141652191e0b63ec92719c53ab8ed59d98e6fc8f21ce45\";\r\n\r\n    const al = async () => {\r\n\r\n        const client = Client.forTestnet();\r\n        client.setOperator(myAccountId, myPrivateKey);\r\n\r\n\r\n        const privateKey = await PrivateKey.generate();\r\n        const publicKey = privateKey.publicKey;\r\n        console.log(\"private = 0x\" + privateKey);\r\n        /* console.log(privateKey.toString()); */\r\n        console.log(\"public = 0x\" + publicKey);\r\n\r\n        const transaction = new AccountCreateTransaction()\r\n                            .setKey(privateKey.publicKey)\r\n                            .setInitialBalance(new Hbar(10))\r\n                            \r\n\r\n        //Sign the transaction with the client operator private key and submit to a Hedera network\r\n        const txResponse = await transaction.execute(client);\r\n\r\n        //Request the receipt of the transaction\r\n        const receipt = await txResponse.getReceipt(client);\r\n\r\n        //Get the account ID\r\n        const newAccountId = receipt.accountId;\r\n\r\n        /* client.setOperator(newAccountId, privateKey); */\r\n\r\n        console.log(\"The new account ID is \" +newAccountId);\r\n\r\n\r\n\r\n\r\n        /* const TicketsRef = firebase.firestore().collection('User');\r\n\r\n\r\n        \r\n        const Tick = {\r\n                Name:Tkn.Name,\r\n                Symbol:Tkn.Sym,\r\n                Amount:Tkn.Amt,\r\n                Description:Tkn.Desc,\r\n                TokenId:(tokenId.toString()),\r\n                Creator:PblKey,\r\n        }\r\n\r\n\r\n        TicketsRef.push(Tick); */\r\n\r\n        \r\n\r\n\r\n        firebase.firestore().collection('User').doc((publicKey.toString())).set({\r\n            \r\n                PbKey:(publicKey.toString()),\r\n                PKey:(privateKey.toString()),\r\n                AccId:(newAccountId.toString()),\r\n                AccTickets:[],\r\n                CreatedTickets:[],\r\n            \r\n        \r\n        })\r\n        .then(() => {\r\n            console.log(\"Document successfully written!\");\r\n        })\r\n        .catch((error) => {\r\n            console.error(\"Error writing document: \", error);\r\n        });\r\n\r\n\r\n        alert(\"PrivateKey = 0x\" + privateKey +'  '+ \"PublicKey = 0x\" + publicKey + '  ' + 'Account Id = ' + newAccountId)\r\n    }\r\n    return (\r\n      \r\n      <div id=\"te\"> <h1>LOGIN</h1> \r\n        <div className=\"screen\">\r\n              \r\n            \r\n{/*         <Button className =\"f\" variant=\"info\" >Login with Private Key</Button>{' '}\r\n            <Button className =\"f\" variant=\"success\"  >Login with Mnemonic</Button>{' '}\r\n            <Button className =\"f\" variant=\"primary\"  >Make an Account</Button>{' '}  */}  \r\n\r\n            <Card id=\"ll\">\r\n                <Card.Img variant=\"top\" id=\"pi\" src={img3}/>\r\n                    <Card.Body>\r\n                    <Card.Title id=\"ti\">Login With:</Card.Title>\r\n                    <Link id=\"pl\" to=\"/privatekey\">\r\n                     <Button id=\"jl\" variant=\"contained\" color=\"primary\">Private Key</Button>\r\n                    </Link>\r\n                    </Card.Body>\r\n            </Card>\r\n            <Card  id=\"ll\" >\r\n                <Card.Img variant=\"top\" id=\"pi\" src={img1} />\r\n                    <Card.Body>\r\n                    <Card.Title id=\"ti\" >Login With:</Card.Title>\r\n\r\n                     <Button onClick={al} id=\"jl\" variant=\"contained\"color=\"primary\">Make an Account</Button>\r\n                    </Card.Body>\r\n            </Card>\r\n            <Card  id=\"ll\">\r\n                <Card.Img variant=\"top\" id=\"pi\" src={img2} />\r\n                    <Card.Body>\r\n                    <Card.Title id=\"ti\">Login With:</Card.Title>\r\n    \r\n                    <Link id=\"pl\" to=\"/mnemonic\">\r\n                      <Button id=\"jl\" variant=\"contained\" color=\"primary\">Mnemonic</Button>\r\n                    </Link>\r\n                     \r\n                    </Card.Body>\r\n            </Card>\r\n\r\n\r\n            {/* <Link id=\"pl\" to=\"/privatekey\">\r\n                <Button id=\"jl\" variant=\"contained\" color=\"secondary\">Login with Private Key</Button>\r\n            </Link>\r\n\r\n            <Link id=\"pl\" to=\"/mnemonic\">\r\n                <Button id=\"jl\" variant=\"contained\" color=\"secondary\">Login with Mnemonic</Button>\r\n            </Link>    \r\n            \r\n            \r\n            <Button onClick={al} id=\"jl\" variant=\"contained\" color=\"secondary\">Make an Account</Button> */}\r\n            \r\n            \r\n\r\n       \r\n            \r\n        </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/hedera.a40bef9f.png\";","import React from 'react'\r\nimport './Home.css';\r\nimport hed from '../images/hedera.png';\r\nfunction Home() {\r\n  return (\r\n    <>\r\n      <header\r\n        className=\"banner\"\r\n        style={{\r\n          backgroundSize: \"cover\",\r\n          backgroundImage: 'url('+hed+')',\r\n          backgroundPosition: \"center center\",\r\n        }}\r\n      >\r\n        <div className=\"banner__contents\">\r\n          {/* title,buttons,description */}\r\n          {/* <h1 className=\"banner__title\">\r\n          Its our project\r\n        </h1>\r\n        <div className=\"banner__buttons\">\r\n          <button className=\"banner__button\">Play</button>\r\n          <button className=\"banner__button\">My List</button>\r\n        </div> */}\r\n          {/* <h1 className=\"banner__description\">\r\n          Make it better\r\n        </h1> */}\r\n        </div>\r\n        <div className=\"banner--fadeBottom\" />\r\n      </header>\r\n      <section id=\"sec\">\r\n        <div id=\"dout\">\r\n          <div id=\"d1\">\r\n            <h1>FAST</h1>\r\n          </div>\r\n          <div id=\"d2\">\r\n            <img\r\n              id=\"pich\"\r\n              src=\"https://s3.us-east-1.amazonaws.com/hedera-com/homepage-value-prop-1.png\"\r\n            ></img>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section id=\"sec\">\r\n        <div id=\"dout\">\r\n          <div id=\"d1\">\r\n            <img\r\n              id=\"pich\"\r\n              src=\"https://s3.us-east-1.amazonaws.com/hedera-com/homepage-value-prop-3.png\"\r\n            ></img>\r\n          </div>\r\n          <div id=\"d2\">\r\n            <h1>SECURE</h1>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section id=\"sec\">\r\n        <div id=\"dout\">\r\n          <div id=\"d2\">\r\n            <h1>FAIR</h1>\r\n          </div>\r\n          <div id=\"d1\">\r\n            <img\r\n              id=\"pich\"\r\n              src=\"https://s3.us-east-1.amazonaws.com/hedera-com/homepage-value-prop-2.png\"\r\n            ></img>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section id=\"sec\">\r\n        <div id=\"dout\">\r\n          <div id=\"d2\">\r\n            <img\r\n              id=\"pich\"\r\n              src=\"https://s3.us-east-1.amazonaws.com/hedera-com/homepage-value-prop-4.png\"\r\n            ></img>\r\n          </div>\r\n          <div id=\"d1\">\r\n            <h1>STABLE</h1>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home\r\n","import {createContext} from \"react\";\r\n\r\nexport const LoginContext = createContext({});","import React , { useState,useContext } from 'react'\r\nimport {useHistory } from \"react-router-dom\";\r\nimport {Box , Button } from '@material-ui/core'\r\nimport { PrivateKey , Mnemonic} from '@hashgraph/sdk'\r\nimport {LoginContext} from \"./LoginContext\";\r\n\r\nimport './PrivateKey.css'\r\n\r\n\r\nexport default function PK() {\r\n    \r\n    const {setPrKey,prKey} = useContext(LoginContext);\r\n    // const [PrKey , SetPrKey ] = useState('');\r\n    const history = useHistory();\r\n    \r\n    const inputEvent = (e) => {\r\n        /* console.log(e.target.value); */\r\n        setPrKey(e.target.value)\r\n    \r\n    }\r\n    \r\n    /* media milk rally thought afford gas monitor close box slow employ marine quality jacket orbit trigger cancel try above weird save prepare snow slim */\r\n    \r\n    \r\n    const onSubmit = async (e) => {\r\n       \r\n        \r\n        // e.preventDefault(); \r\n        if(prKey.length <= 96 && prKey.length!=null){\r\n            history.push(\"/login\")\r\n            alert(\"Error Login!!\")\r\n        }else{\r\n            history.push(\"/home\")\r\n        }\r\n        // const privateKey = PrivateKey.fromString(prKey); \r\n        // console.log(privateKey.toString());   \r\n        // const publicKey = privateKey.publicKey;\r\n        // console.log(publicKey.toString());\r\n        // SetPrKey('')\r\n        /* const mnemonic = await Mnemonic.generate(); */\r\n        /* var i;\r\n        for(i=0;i<24;i++){\r\n            console.log(mnemonic.words[i])\r\n        } */\r\n        \r\n        \r\n    }\r\n\r\n    return (\r\n        \r\n     \r\n        <div className=\"screen1\">\r\n          \r\n             <form>\r\n                <Box className =\"box\" component=\"div\" m={1}>\r\n               \r\n                <input type=\"text\" id=\"inn\" onChange={inputEvent} value={prKey} placeholder=\"Enter Your PivateKey\"/>\r\n                <Button onClick={onSubmit} type=\"submit\" id =\"l\" variant=\"contained\" color=\"primary\" title=\"hh\">Login</Button>\r\n                </Box>\r\n            </form>\r\n        </div>\r\n       \r\n    )\r\n}\r\n","import React,{useState , useEffect , useContext} from 'react';\r\nimport './color.css';\r\nimport { Button } from '@material-ui/core';\r\nimport { LoginContext } from \"./LoginContext\";\r\nimport {\r\n  Client,\r\n  TokenCreateTransaction,\r\n  PublicKey,\r\n  PrivateKey,\r\n  TopicCreateTransaction,\r\n  TopicMessageSubmitTransaction,\r\n} from \"@hashgraph/sdk\";\r\nimport firebase from \"../utils/firebase\";\r\n\r\nfunction Color() {\r\n\r\n  const [r , setR] = useState('00');\r\n  const [g , setG] = useState('00');\r\n  const [b , setB] = useState('00');\r\n  const inputEventR = (e) => {\r\n    // console.log(e.target.value); \r\n    setR(e.target.value);\r\n}\r\n  const inputEventG = (e) => {\r\n    // console.log(e.target.value);\r\n    setG(e.target.value);\r\n}\r\n  const inputEventB = (e) => {\r\n    // console.log(e.target.value); \r\n    setB(e.target.value);\r\n}\r\n \r\nlocalStorage.setItem(\"r\",r);\r\nvar r1 = localStorage.getItem(\"r\");\r\nlocalStorage.setItem(\"g\",g);\r\nvar g1 = localStorage.getItem(\"g\");\r\nlocalStorage.setItem(\"b\",b);\r\nvar b1 = localStorage.getItem(\"b\");\r\n// console.log(r1);\r\n\r\n  /* var red = document.getElementById('red').value;\r\n   console.log(red);\r\n  var green = document.getElementById('green').value;\r\n  var blue = document.getElementById('blue').value; */\r\n  var color = 'rgb('+r+','+g+','+b+')';\r\n  console.log(color);\r\n  /* document.body.style.backgroundColor = color;\r\n  document.getElementById('oo').style.backgroundColor=color; */\r\n\r\n\r\n  const styleObj = {\r\n    backgroundColor:color\r\n  }\r\n\r\n  const [Tkn, SetTkn] = useState({\r\n    Name: \"\",\r\n    Sym: \"\",\r\n    Desc: \"\",\r\n    Amt: \"\",\r\n    Price: \"\",\r\n    PbAdd: \"\",\r\n    TknId: \"\",\r\n    PRK: \"\",\r\n  });\r\n\r\n\r\n  const [H, setH] = useState('')\r\n  const { prKey } = useContext(LoginContext);\r\n  console.log(prKey)\r\n  const NPrKey = PrivateKey.fromString(prKey);\r\n  \r\n  const NPblKey = NPrKey.publicKey;\r\n  console.log(NPblKey.toString());\r\n\r\n\r\n\r\n\r\n    firebase\r\n      .firestore()\r\n      .collection(\"User\")\r\n      .doc(NPblKey.toString())\r\n      .get()\r\n      .then((doc) =>\r\n          {\r\n         /*  console.log(doc.data()); */\r\n          const NAccId = doc.data().AccId; \r\n          /* console.log(NAccId) */\r\n          setH(NAccId)\r\n        }\r\n      )\r\n\r\n\r\n    const Cl = async () => {\r\n\r\n\r\n    \r\n    const client = Client.forTestnet();\r\n        client.setOperator(H, NPrKey);\r\n\r\n        const transaction = new TopicCreateTransaction().setSubmitKey(NPrKey);\r\n\r\n        //Sign with the client operator private key and submit the transaction to a Hedera network\r\n        const txResponse = await transaction.execute(client);\r\n\r\n        //Request the receipt of the transaction\r\n        const receipt = await txResponse.getReceipt(client);\r\n\r\n        //Get the topic ID\r\n        const newTopicId = receipt.topicId;\r\n\r\n       /*  console.log(newTopicId.toString()) */\r\n\r\n        const l = await new TopicMessageSubmitTransaction({\r\n          topicId: newTopicId,\r\n          message: (\r\n            r + ' ' + g + ' ' + b\r\n            \r\n        )\r\n        }).execute(client);\r\n\r\n\r\n        console.log([r,g,b])\r\n\r\n        const loltxn = await new TokenCreateTransaction()\r\n          .setTokenName(newTopicId.toString())\r\n          .setTokenSymbol(newTopicId.toString())\r\n          .setTreasuryAccountId(H)\r\n          .setInitialSupply(1)\r\n          .freezeWith(client);\r\n\r\n        \r\n        //Get the receipt of the transaction\r\n\r\n        const txn = await loltxn.sign((NPrKey));\r\n\r\n        const signtxn = await txn.execute(client);\r\n        /* console.log(txn); */\r\n\r\n        const lolreceipt = await signtxn.getReceipt(client);\r\n\r\n        //Get the token ID from the receipt\r\n        const tokenId = lolreceipt.tokenId;\r\n\r\n        console.log(tokenId.toString());\r\n\r\n        firebase\r\n          .firestore()\r\n          .collection(\"Color\")\r\n          .doc(newTopicId.toString())\r\n          .set({\r\n            Name: newTopicId.toString(),\r\n            Symbol: newTopicId.toString(),\r\n            Amount: 1,\r\n            Description: [r, g, b],\r\n            TokenId: tokenId.toString(),\r\n            Creator: NPblKey.toString(),\r\n            PRK: NPrKey.toString(),\r\n          })\r\n          .then(() => {\r\n            console.log(\"Document successfully written!\");\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error writing document: \", error);\r\n          });\r\n\r\n        SetTkn({\r\n          Name: \"\",\r\n          Sym: \"\",\r\n          Desc: \"\",\r\n          Amt: \"\",\r\n          Price: \"\",\r\n        });\r\n\r\n       \r\n\r\n  }\r\n\r\n// document.getElementById('red').addEventListener('input',myColor);\r\n// document.getElementById('green').addEventListener('input',myColor);\r\n// document.getElementById('blue').addEventListener('input',myColor);\r\n  return (\r\n    <div id=\"oo\" style={styleObj}>\r\n      <div className=\"main\">\r\n        Choose your RGB\r\n        <h1 id=\"box\">\r\n          {r},{g},{b}\r\n        </h1>\r\n        Red:\r\n        <input\r\n          type=\"range\"\r\n          id=\"red\"\r\n          onChange={inputEventR}\r\n          value={r}\r\n          min=\"0\"\r\n          max=\"255\"\r\n        />\r\n        Green:\r\n        <input\r\n          type=\"range\"\r\n          id=\"green\"\r\n          onChange={inputEventG}\r\n          value={g}\r\n          min=\"0\"\r\n          max=\"255\"\r\n        />\r\n        Blue:\r\n        <input\r\n          type=\"range\"\r\n          id=\"blue\"\r\n          onChange={inputEventB}\r\n          value={b}\r\n          min=\"0\"\r\n          max=\"255\"\r\n        />\r\n        <Button onClick={Cl} variant=\"contained\" color=\"primary\" type=\"submit\">\r\n          Make Token\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Color","import React , { useState } from 'react'\r\nimport {Box , Button } from '@material-ui/core'\r\nimport { Mnemonic, PrivateKey } from '@hashgraph/sdk'\r\nimport './PrivateKey.css'\r\n\r\n\r\nexport default function Mne() {\r\n\r\n    const [Mn , SetMn ] = useState('');\r\n    \r\n\r\n    const inputEvent = (e) => {\r\n        console.log(e.target.value);\r\n        SetMn(e.target.value)\r\n    }\r\n\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const mnemonic = await Mnemonic.fromString(Mn);\r\n        console.log(mnemonic)\r\n        /* const privateKey = PrivateKey.fromMnemonic(Mn); */\r\n        const privateKey = await mnemonic.toPrivateKey();\r\n        console.log(privateKey);\r\n        const publicKey = privateKey.publicKey;\r\n        console.log(publicKey.toString());\r\n        SetMn('');\r\n       \r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"screen1\">\r\n            <form >\r\n                <Box className =\"box\" component=\"div\" m={1}>\r\n                <input onChange={inputEvent} id=\"inn\" type=\"text\" placeholder=\"Enter Mnemonic Phrase\" className=\"pkinput\" value={Mn}/>\r\n                <Button onClick={onSubmit} type=\"submit\" className =\"l\" variant=\"contained\" color=\"primary\" title=\"hh\">Login</Button>\r\n                </Box>\r\n            </form>\r\n        </div>\r\n        \r\n    )\r\n}\r\n","import React , { useState } from \"react\";\r\nimport { Card, OverlayTrigger, Tooltip, Image } from \"react-bootstrap\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport {\r\n  Client,\r\n  TransferTransaction,\r\n  TokenAssociateTransaction,\r\n  PrivateKey,\r\n} from \"@hashgraph/sdk\";\r\n\r\n\r\n    const SellerAccId = \"0.0.301906\";\r\n    const SellerPblKey =\r\n      \"0x302a300506032b657003210044c714812aec04be8c2c2704d4f0432f49b2f2b3350aa69fdc9b9715de9a8d9a\";\r\n    const SellerPrKey =\r\n      \"0x302e020100300506032b65700422042092d0f20b0324b71b55bf397a85c214bbb66e98c8869911fb30dd7b6a0d60b7a4\";\r\n\r\n    const tokenId = \"0.0.303341\";\r\n\r\n    const accountId = \"0.0.303460\";\r\n    const publicKey =\r\n      \"302a300506032b65700321002ee57aad815e3597b7815728315e51bf42fbd867e32b9deb40d1f483cfc9ea6e\";\r\n    const privateKey =\r\n      \"302e020100300506032b6570042204201026b742d1ee8cb5a0141652191e0b63ec92719c53ab8ed59d98e6fc8f21ce45\";\r\n\r\n    let a\r\nexport default function Cardl(props) {\r\n\r\n    const [Numb, SetNumb] = useState('');\r\n\r\n    \r\n\r\n    const numb = async (e) => {\r\n\r\n        a = e.target.value\r\n        console.log(a)\r\n        SetNumb(e.target.value)\r\n        console.log(Numb)\r\n        console.log(props.K.TokenId)\r\n    };\r\n\r\n    const buy = async () => {\r\n\r\n        \r\n      const client = Client.forTestnet();\r\n      client.setOperator(SellerAccId, SellerPrKey);\r\n\r\n      const transaction = await new TokenAssociateTransaction()\r\n        .setAccountId(accountId)\r\n        .setTokenIds([props.K.TokenId])\r\n        .freezeWith(client);\r\n\r\n      //Sign with the private key of the account that is being associated to a token\r\n      const signTx = await transaction.sign(PrivateKey.fromString(privateKey));\r\n\r\n      //Submit the transaction to a Hedera network\r\n      const txResponse = await signTx.execute(client);\r\n\r\n      //Request the receipt of the transaction\r\n      const receipt = await txResponse.getReceipt(client);\r\n\r\n      //Get the transaction consensus status\r\n      const transactionStatus = receipt.status;\r\n\r\n      console.log(\r\n        \"The transaction consensus status \" + transactionStatus.toString()\r\n      );\r\n\r\n      const tx = await new TransferTransaction()\r\n        .addTokenTransfer(props.K.TokenId, SellerAccId, -(Numb))\r\n        .addTokenTransfer(props.K.TokenId, accountId, (Numb))\r\n        .freezeWith(client);\r\n\r\n      //Sign with the sender account private key\r\n      const sign = await tx.sign(PrivateKey.fromString(SellerPrKey));\r\n\r\n      //Sign with the client operator private key and submit to a Hedera network\r\n      const txResponse1 = await sign.execute(client);\r\n\r\n      //Request the receipt of the transaction\r\n      const receipt1 = await txResponse1.getReceipt(client);\r\n\r\n      //Obtain the transaction consensus status\r\n      const transactionStatus1 = receipt1.status;\r\n\r\n      console.log(\r\n        \"The transaction consensus status \" + transactionStatus1.toString()\r\n      );\r\n\r\n      const txn = await new TransferTransaction()\r\n        .addHbarTransfer(SellerAccId, (Numb)*(props.K.Price))\r\n        .addHbarTransfer(accountId, -((props.K.Price)*(Numb)))\r\n\r\n        .freezeWith(client);\r\n\r\n      //Sign with the sender account private key\r\n      const sign2 = await txn.sign(PrivateKey.fromString(privateKey));\r\n\r\n      //Sign with the client operator private key and submit to a Hedera network\r\n      const txResponse2 = await sign2.execute(client);\r\n\r\n      //Request the receipt of the transaction\r\n      const receipt2 = await txResponse2.getReceipt(client);\r\n\r\n      //Obtain the transaction consensus status\r\n      const transactionStatus2 = receipt2.status;\r\n\r\n      console.log(\r\n        \"The transaction consensus status \" + transactionStatus1.toString()\r\n      );\r\n\r\n\r\n      SetNumb('');\r\n    };\r\n\r\n\r\n\r\n  return (\r\n    <div id=\"mcc\">\r\n      <Card id=\"cc\">\r\n        <Card.Img\r\n          id=\"pic\"\r\n          variant=\"top\"\r\n          src={`https://siasky.net/${props.K.Skylink}`}\r\n        />\r\n        <Card.Body>\r\n          <Card.Title id=\"kl\">{props.K.Name}</Card.Title>\r\n          <Card.Text id=\"gg\"> <strong>Token ID:</strong> {props.K.TokenId}</Card.Text>\r\n          <Card.Text id=\"gg\"> <strong>Description:</strong> {props.K.Description}</Card.Text>\r\n          <div id=\"ot\">\r\n            <OverlayTrigger\r\n              placement=\"bottom\"\r\n              overlay={\r\n                <Tooltip id=\"button-tooltip-2\">{props.K.Creator}</Tooltip>\r\n              }\r\n            >\r\n              {({ ref, ...triggerHandler }) => (\r\n                <Button\r\n                  id=\"bt1\"\r\n                  variant=\"light\"\r\n                  {...triggerHandler}\r\n                  className=\"d-inline-flex align-items-center\"\r\n                >\r\n                  <Image\r\n                    id=\"cim\"\r\n                    ref={ref}\r\n                    roundedCircle\r\n                    src=\"https://www.microsoft.com/en-us/research/wp-content/themes/microsoft-research-theme/assets/images/svg/icon-people-circle.svg\"\r\n                    height=\"20px\"\r\n                    width=\"20px\"\r\n                  />\r\n                  <span className=\"ml-1\">Hover to see Creator</span>\r\n                </Button>\r\n              )}\r\n            </OverlayTrigger>\r\n            ,\r\n          </div>\r\n\r\n          {/* <Card.Text id=\"gg\">\r\n                              {props.K.Creator}\r\n                            </Card.Text> */}\r\n          <Card.Text id=\"gl\">Amount: {props.K.Amount}</Card.Text>\r\n          <Card.Text id=\"gl\">Price: {props.K.Price}</Card.Text>\r\n          <div id=\"jkl\">\r\n            <input\r\n              value={Numb}\r\n              onChange={numb}\r\n              id=\"in\"\r\n              type=\"number\"\r\n              placeholder=\"Number of Ticket\"\r\n            ></input>\r\n            <Button onClick={buy} variant=\"contained\" color=\"primary\">\r\n              Buy\r\n            </Button>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState , useEffect } from 'react'\r\nimport firebase from '../utils/firebase';\r\nimport Cardl from \"../component/Card\";\r\nimport './Event.css'\r\n\r\n   \r\n\r\nexport default function Event() {\r\n\r\n\r\n  const [K , SetK] = useState([]);\r\n  \r\n\r\n  useEffect(() => {\r\n\r\n    firebase.firestore().collection('Tickets').onSnapshot(snapshot => {\r\n      \r\n      SetK(snapshot.docs.map(doc => doc.data()))\r\n      \r\n      \r\n      \r\n      \r\n      console.log(K);\r\n    \r\n    })\r\n    \r\n  }, [])\r\n\r\n    return (\r\n        <div id=\"hh\">\r\n            {K.map((K, index) => \r\n                    <>\r\n                      <Cardl K={K}/>\r\n                    </>\r\n                )}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n{/* <div className=\"hh\">\r\n            {event.map((event, index) => \r\n                    <>\r\n                      <div className=\"cardlist\">    \r\n                      <Card className=\"gh\" style={{ width: '18rem' }}>\r\n                        <Card.Img className =\"pic\" variant=\"top\" src={event.poster} />\r\n                        <Card.Body>\r\n                            <Card.Title className=\"kl\">{event.title}</Card.Title>\r\n                            <Card.Text className=\"gg\">\r\n                            Some quick example text to build on the card title and make up the bulk of\r\n                            the card's content.\r\n                            </Card.Text>\r\n                            <Card.Text className=\"gl\">{event.amount}</Card.Text>\r\n                            <Button onClick={buy} id=\"jkl\" variant=\"contained\" color=\"primary\">Buy</Button>\r\n                        </Card.Body>\r\n                        </Card>\r\n                      </div>  \r\n                    </>\r\n                )}\r\n        </div> */}","import React , {useEffect} from 'react'\r\nimport { Card, Form, ResponsiveEmbed } from \"react-bootstrap\";\r\nimport { Button, Input } from \"@material-ui/core\";\r\nimport {\r\n  Client,\r\n  TransferTransaction,\r\n  TokenAssociateTransaction,\r\n  PrivateKey,\r\n} from \"@hashgraph/sdk\";\r\nimport { QRCode } from \"react-qr-svg\";\r\nimport seedrandom from 'seedrandom';\r\n\r\n/* const SellerAccId = \"0.0.301906\";\r\nconst SellerPblKey =\r\n  \"0x302a300506032b657003210044c714812aec04be8c2c2704d4f0432f49b2f2b3350aa69fdc9b9715de9a8d9a\";\r\nconst SellerPrKey =\r\n  \"0x302e020100300506032b65700422042092d0f20b0324b71b55bf397a85c214bbb66e98c8869911fb30dd7b6a0d60b7a4\"; */\r\n\r\n\r\n  \r\n\r\n  \r\n\r\n  \r\n\r\n  export default function TicketCard(props) {\r\n\r\n    \r\n      // const now = new Date();\r\n      // console.log(now.getMinutes()); \r\n\r\n    var a = props.T.slice(0,10);\r\n    var b = props.T.slice(11);\r\n    return (\r\n      <div className=\"cardlist\">\r\n        <Card className=\"gh\" style={{ width: \"18rem\" }}>\r\n          {/* <Card.Img className=\"pic\" variant=\"top\" src={props.T.poster} /> */}\r\n          <QRCode\r\n            \r\n            bgColor=\"#FFFFFF\"\r\n            fgColor=\"#000000\"\r\n            level=\"Q\"\r\n            style={{ width: 256, justify: \"center\", margin: 16 }}\r\n            value={a}\r\n          />\r\n          <Card.Body id=\"cb\">\r\n            <Card.Title className=\"kl\">{props.T.Name}</Card.Title>\r\n            <Card.Text className=\"gg\">\r\n              <strong>Token Id: </strong> {a}\r\n            </Card.Text>\r\n            <Card.Text id=\"gll\">Price : {b}</Card.Text>\r\n\r\n            <Input className=\"op\" placeholder=\"Transfer To\"></Input>\r\n\r\n            <Button id=\"jj\" variant=\"contained\" color=\"primary\">\r\n              Transfer\r\n            </Button>\r\n            <Button id=\"jk\" variant=\"contained\" color=\"primary\">\r\n              Sell\r\n            </Button>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    );\r\n}","import React, { useState, useEffect, useContext } from \"react\";\r\nimport TicketCard from '../component/TicketCard'\r\nimport firebase from \"../utils/firebase\";\r\nimport useKey from \"../hooks/useKey\";\r\nimport {\r\n  Client,\r\n  AccountBalanceQuery,\r\n  PrivateKey\r\n} from \"@hashgraph/sdk\";\r\nimport { LoginContext } from \"./LoginContext\";\r\n\r\n\r\nimport './TicketList.css'\r\n\r\n\r\n/* const SellerAccId = \"0.0.301906\";\r\nconst SellerPblKey =\r\n  \"302a300506032b657003210044c714812aec04be8c2c2704d4f0432f49b2f2b3350aa69fdc9b9715de9a8d9a\";\r\nconst SellerPrKey =\r\n  \"0x302e020100300506032b65700422042092d0f20b0324b71b55bf397a85c214bbb66e98c8869911fb30dd7b6a0d60b7a4\";\r\n */\r\n\r\nexport default function TicketList() {\r\n  \r\n\r\n\r\n\r\n  const [T, SetT] = useState([]);\r\n  // const [V, SetV] = useState(''); \r\n\r\n  // const [Key, SetKey] = useKey(\"\");\r\n\r\n  let NAccId;\r\n  /* const [H, setH] = useState(\"\"); */\r\n  const { prKey } = useContext(LoginContext);\r\n  //console.log(prKey);\r\n  const NPrKey = PrivateKey.fromString(prKey);\r\n\r\n  const NPblKey = NPrKey.publicKey;\r\n  /* console.log(NPblKey.toString()); */\r\n   \r\n\r\n  firebase\r\n    .firestore()\r\n    .collection(\"User\")\r\n    .doc(NPblKey.toString())\r\n    .get()\r\n    .then((doc) => {\r\n     /*  console.log(doc.data()); */\r\n       NAccId = doc.data().AccId;\r\n      /* console.log(NAccId); */\r\n      /* setH(NAccId);\r\n      console.log(H) */\r\n      localStorage.setItem('H' , NAccId)\r\n    });\r\n    \r\n      \r\n\r\n  \r\n    useEffect(async() => {\r\n      \r\n\r\n      console.log(localStorage.getItem(\"H\"));\r\n      const hala = localStorage.getItem(\"H\");\r\n      const client = Client.forTestnet();\r\n\r\n          client.setOperator(hala, prKey);\r\n\r\n          const query = await new AccountBalanceQuery()\r\n            .setAccountId(hala)\r\n            .execute(client);\r\n\r\n          const a = query.tokens;\r\n\r\n          for (const [key, value] of a) {\r\n\r\n\r\n            /* console.log(key.toString(), value.toString()); */\r\n\r\n            firebase\r\n              .firestore()\r\n              .collection(\"User\")\r\n              .doc(NPblKey.toString())\r\n              .update({\r\n                AccTickets: firebase.firestore.FieldValue.arrayUnion(\r\n                  key.toString() + \":\" + value.toString() + \" \"\r\n                ),\r\n              })\r\n              .then(() => {\r\n                console.log(\"Document successfully written!\");\r\n              })\r\n              .catch((error) => {\r\n                console.error(\"Error writing document: \", error);\r\n              });\r\n\r\n              \r\n            /* SetT(key.toString())\r\n            SetV(value.toString()) */\r\n            /* t = key.toString();\r\n            v = value.toString();\r\n            \r\n            console.log(t) */\r\n            \r\n          }\r\n\r\n          // firebase\r\n          //   .firestore()\r\n          //   .collection(\"User\")\r\n          //   .doc(SellerPblKey)\r\n          //   .get().then((doc) => {\r\n          //     console.log(doc.data())\r\n          //   })\r\n\r\n\r\n            firebase.firestore().collection('User').doc(NPblKey.toString())\r\n            .get().then((doc) => {\r\n\r\n              SetT(doc.data().AccTickets)\r\n              /* console.log(T)\r\n              console.log(doc.data()) */\r\n              \r\n              \r\n              /* doc.data().AccTickets.forEach(function (f) {\r\n                  console.log(f);\r\n                  \r\n              }) */\r\n              \r\n            }) \r\n\r\n\r\n    }, [])\r\n          \r\n    \r\n   \r\n      \r\n      \r\n\r\n  \r\n  return (\r\n           <div className=\"hh\">\r\n            {T.map((T,index) => \r\n                    <>\r\n                        <TicketCard T={T} />  \r\n                        \r\n                    </>\r\n                )}\r\n        </div> \r\n\r\n          // <>\r\n          //   <div><TicketCard T={T} /></div>\r\n          // </> \r\n        );\r\n  \r\n    \r\n}","import React, { useContext,useState } from \"react\";\r\nimport { Form , Col , Row } from 'react-bootstrap'\r\nimport { Button } from '@material-ui/core'\r\nimport {\r\n  Client,\r\n  TokenCreateTransaction,\r\n  PublicKey,\r\n  PrivateKey,\r\n  TopicCreateTransaction,\r\n  TopicMessageSubmitTransaction,\r\n} from \"@hashgraph/sdk\";\r\nimport firebase from '../utils/firebase';\r\nimport { SkynetClient } from 'skynet-js'\r\nimport { LoginContext } from \"./LoginContext\";\r\n\r\n\r\n\r\nimport './CreateToken.css'\r\n\r\nexport default function CreateToken() {\r\n\r\n  const [H, setH] = useState('')\r\n  const { prKey } = useContext(LoginContext);\r\n  console.log(prKey)\r\n  const NPrKey = PrivateKey.fromString(prKey);\r\n  \r\n  const NPblKey = NPrKey.publicKey;\r\n  console.log(NPblKey.toString());\r\n\r\n\r\n\r\n\r\n    firebase\r\n      .firestore()\r\n      .collection(\"User\")\r\n      .doc(NPblKey.toString())\r\n      .get()\r\n      .then((doc) =>\r\n          {\r\n          console.log(doc.data());\r\n          const NAccId = doc.data().AccId; \r\n          console.log(NAccId)\r\n          setH(NAccId)\r\n        }\r\n      )\r\n    \r\n  \r\n/* \r\n    const AccId = '0.0.301906'\r\n    const PblKey = '302a300506032b657003210044c714812aec04be8c2c2704d4f0432f49b2f2b3350aa69fdc9b9715de9a8d9a';\r\n    const PrKey = '302e020100300506032b65700422042092d0f20b0324b71b55bf397a85c214bbb66e98c8869911fb30dd7b6a0d60b7a4'\r\n    \r\n    const accountId = '0.0.303460'\r\n    const publicKey = \"302a300506032b65700321002ee57aad815e3597b7815728315e51bf42fbd867e32b9deb40d1f483cfc9ea6e\"\r\n    const privateKey = \"302e020100300506032b6570042204201026b742d1ee8cb5a0141652191e0b63ec92719c53ab8ed59d98e6fc8f21ce45\" */\r\n\r\n\r\n    const [Tkn , SetTkn] = useState({   \r\n\r\n        Name:\"\",\r\n        Sym:\"\",\r\n        Desc:\"\",\r\n        Amt:\"\",\r\n        Price:\"\",\r\n        PbAdd:\"\",\r\n        TknId:\"\",\r\n      \r\n\r\n    });\r\n\r\n    const [File , SetFile] = useState('');\r\n\r\n\r\n    const inputEvent = (e) => {\r\n        /* console.log(e.target.value); */\r\n        /* SetTkn(e.target.value) */\r\n\r\n        const value = e.target.value;\r\n        const name = e.target.name;\r\n        const files = e.target.files;\r\n        \r\n        \r\n        /* console.log(files[0]) */\r\n        \r\n\r\n        /* console.log(name) */\r\n        SetTkn((pv) => {\r\n            if( name === 'Name'){\r\n                return{\r\n                    Name:value,\r\n                    Sym:pv.Sym,\r\n                    Desc:pv.Desc,\r\n                    Amt:pv.Amt,\r\n                    Price:pv.Price,\r\n                    File:pv.File\r\n                }\r\n            }\r\n            else if( name === 'Sym'){\r\n                return{\r\n                    Name:pv.Name,\r\n                    Sym:value,\r\n                    Desc:pv.Desc,\r\n                    Amt:pv.Amt,\r\n                    Price:pv.Price,\r\n                    File:pv.File\r\n                }\r\n            }\r\n            else if( name === 'Desc'){\r\n                return{\r\n                    Name:pv.Name,\r\n                    Sym:pv.Sym,\r\n                    Desc:value,\r\n                    Amt:pv.Amt,\r\n                    Price:pv.Price,\r\n                    File:pv.File\r\n                }\r\n            }\r\n            else if( name === 'Amt'){\r\n                return{\r\n                    Name:pv.Name,\r\n                    Sym:pv.Sym,\r\n                    Desc:pv.Desc,\r\n                    Amt:value,\r\n                    Price:pv.Price,\r\n                    File:pv.File\r\n                }\r\n            }\r\n            else if( name === 'Price'){\r\n                return{\r\n                    Name:pv.Name,\r\n                    Sym:pv.Sym,\r\n                    Desc:pv.Desc,\r\n                    Amt:pv.Amt,\r\n                    Price:value,\r\n                    File:pv.File\r\n                }\r\n            }\r\n            else if( name === 'File'){\r\n                return{\r\n                    Name:pv.Name,\r\n                    Sym:pv.Sym,\r\n                    Desc:pv.Desc,\r\n                    Amt:pv.Amt,\r\n                    Price:pv.Price,\r\n                    File:files[0],\r\n                }\r\n            }\r\n            \r\n        })\r\n\r\n\r\n        /* SetTkn({\r\n            File:(files)\r\n        }) */\r\n        /* console.log(e.target.files)\r\n        console.log(Tkn.File) */\r\n        console.log(Tkn)\r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        console.log(Tkn)\r\n\r\n\r\n        \r\n        const client = Client.forTestnet();\r\n        client.setOperator(H, NPrKey);\r\n\r\n\r\n        const transaction = await new TokenCreateTransaction()\r\n                        .setTokenName(Tkn.Name)\r\n                        .setTokenSymbol(Tkn.Sym)\r\n                        .setTreasuryAccountId(H)\r\n                        .setInitialSupply(Tkn.Amt)\r\n                        .execute(client);\r\n       \r\n        console.log(transaction)\r\n\r\n            \r\n        //Get the receipt of the transaction\r\n        const receipt = await transaction.getReceipt(client);\r\n\r\n        //Get the token ID from the receipt\r\n        const tokenId = receipt.tokenId;\r\n\r\n\r\n\r\n        console.log(tokenId)\r\n\r\n\r\n        console.log(\"The new token ID is \" + tokenId);\r\n        SetTkn({\r\n            TknId:(tokenId.toString())\r\n        })\r\n       \r\n\r\n        firebase\r\n          .firestore()\r\n          .collection(\"Tickets\")\r\n          .doc(tokenId.toString())\r\n          .set({\r\n            Name: Tkn.Name,\r\n            Symbol: Tkn.Sym,\r\n            Amount: Tkn.Amt,\r\n            Description: Tkn.Desc,\r\n            Price: Tkn.Price,\r\n            TokenId: tokenId.toString(),\r\n            Creator: NPblKey.toString(),\r\n            Skylink: File,\r\n            PRK: NPrKey.toString(),\r\n          })\r\n          .then(() => {\r\n            console.log(\"Document successfully written!\");\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error writing document: \", error);\r\n          });\r\n\r\n        /* firebase\r\n          .firestore()\r\n          .collection(\"User\")\r\n          .doc(publicKey)\r\n          .set({\r\n            CreateTickets: tokenId.toString(),\r\n          })\r\n          .then(() => {\r\n            console.log(\"Document successfully written!\");\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error writing document: \", error);\r\n          });\r\n        firebase\r\n          .firestore()\r\n          .collection(\"User\")\r\n          .doc(publicKey)\r\n          .update({\r\n            CreateTickets: firebase.firestore.FieldValue.arrayUnion(tokenId.toString()),\r\n          })\r\n          .then(() => {\r\n            console.log(\"Document successfully written!\");\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error writing document: \", error);\r\n          });\r\n */\r\n        /* const TicketsRef = firebase.database().ref(\"Tick\");\r\n        firebase.firestore.FieldValue.arrayUnion(\"greater_virginia\")\r\n        const Tick = {\r\n                Name:Tkn.Name,\r\n                Symbol:Tkn.Sym,\r\n                Amount:Tkn.Amt,\r\n                Description:Tkn.Desc,\r\n                TokenId:(tokenId.toString()),\r\n                Creator:PblKey,\r\n        }\r\n        TicketsRef.push(Tick); */\r\n\r\n        \r\n        \r\n        SetTkn({\r\n            Name:\"\",\r\n            Sym:\"\",\r\n            Desc:\"\",\r\n            Amt:\"\",\r\n            Price:\"\",\r\n            \r\n        });\r\n\r\n        SetFile(\"\");\r\n       \r\n    }\r\n\r\n    const Nft = async (e) => {\r\n        e.preventDefault();\r\n\r\n        console.log(Tkn)\r\n\r\n        const client = Client.forTestnet();\r\n        client.setOperator(H, NPrKey);\r\n        \r\n\r\n        const transaction = await new TokenCreateTransaction()\r\n              .setTokenName(Tkn.Name)\r\n              .setTokenSymbol(File)\r\n              .setTreasuryAccountId(H)\r\n              .setInitialSupply(1)\r\n              .freezeWith(client);\r\n\r\n           /*  console.log(\r\n              transaction.transactionId.validStart.seconds.toString()\r\n            ); */\r\n            \r\n            //Get the receipt of the transaction\r\n\r\n            const txn = await transaction.sign(NPrKey);\r\n            \r\n\r\n            const signtxn = await txn.execute(client);\r\n            console.log(txn)\r\n\r\n            const receipt = await signtxn.getReceipt(client);\r\n            \r\n            //Get the token ID from the receipt\r\n            const tokenId = receipt.tokenId;\r\n\r\n            console.log(tokenId.toString()); \r\n\r\n\r\n\r\n            firebase\r\n              .firestore()\r\n              .collection(\"NFT\")\r\n              .doc(tokenId.toString())\r\n              .set({\r\n                Name: Tkn.Name,\r\n                Symbol: File,\r\n                Amount: 1,\r\n                Description:\r\n                  Tkn.Desc +\r\n                  \" link to doc is as follows - \" +\r\n                  `https://siasky.net/${File}`,\r\n                Price: Tkn.Price,\r\n                TokenId: tokenId.toString(),\r\n                Creator: NPblKey.toString(),\r\n                Skylink: File,\r\n                PRK: NPrKey.toString(),\r\n              })\r\n              .then(() => {\r\n                console.log(\"Document successfully written!\");\r\n              })\r\n              .catch((error) => {\r\n                console.error(\"Error writing document: \", error);\r\n              });\r\n\r\n\r\n\r\n\r\n\r\n            SetTkn({\r\n              Name: \"\",\r\n              Sym: \"\",\r\n              Desc: \"\",\r\n              Amt: \"\",\r\n              Price: \"\",\r\n            });\r\n\r\n    }\r\n\r\n    const Dnft = async (e) => {\r\n        e.preventDefault();\r\n\r\n        console.log(Tkn)\r\n\r\n\r\n        const client = Client.forTestnet();\r\n        client.setOperator(H, NPrKey);\r\n\r\n        const transaction = new TopicCreateTransaction().setSubmitKey(NPrKey);\r\n\r\n        //Sign with the client operator private key and submit the transaction to a Hedera network\r\n        const txResponse = await transaction.execute(client);\r\n\r\n        //Request the receipt of the transaction\r\n        const receipt = await txResponse.getReceipt(client);\r\n\r\n        //Get the topic ID\r\n        const newTopicId = receipt.topicId;\r\n\r\n        console.log(newTopicId.toString())\r\n\r\n        const l = await new TopicMessageSubmitTransaction({\r\n          topicId: newTopicId,\r\n          message: `https://siasky.net/${File}`,\r\n        }).execute(client);\r\n\r\n\r\n\r\n\r\n        const loltxn = await new TokenCreateTransaction()\r\n          .setTokenName(Tkn.Name)\r\n          .setTokenSymbol(newTopicId.toString())\r\n          .setTreasuryAccountId(H)\r\n          .setInitialSupply(Tkn.Amt)\r\n          .freezeWith(client);\r\n\r\n        \r\n\r\n        //Get the receipt of the transaction\r\n\r\n        const txn = await loltxn.sign((NPrKey));\r\n\r\n        const signtxn = await txn.execute(client);\r\n        console.log(txn);\r\n\r\n        const lolreceipt = await signtxn.getReceipt(client);\r\n\r\n        //Get the token ID from the receipt\r\n        const tokenId = lolreceipt.tokenId;\r\n\r\n        console.log(tokenId.toString());\r\n\r\n        firebase\r\n          .firestore()\r\n          .collection(\"DNFT\")\r\n          .doc(tokenId.toString())\r\n          .set({\r\n            Name: Tkn.Name,\r\n            Symbol: newTopicId.toString(),\r\n            Amount: Tkn.Amt,\r\n            Description:\r\n              Tkn.Desc +\r\n              \" link to doc is as follows - \" +\r\n              `https://siasky.net/${File}`,\r\n            Price: Tkn.Price,\r\n            TokenId: tokenId.toString(),\r\n            Creator: NPblKey.toString(),\r\n            Skylink: File,\r\n            PRK: NPrKey.toString(),\r\n          })\r\n          .then(() => {\r\n            console.log(\"Document successfully written!\");\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error writing document: \", error);\r\n          });\r\n\r\n        SetTkn({\r\n          Name: \"\",\r\n          Sym: \"\",\r\n          Desc: \"\",\r\n          Amt: \"\",\r\n          Price: \"\",\r\n        });\r\n\r\n        SetFile(\"\");\r\n\r\n\r\n    }\r\n\r\n\r\n    const file = async (e) => {\r\n\r\n\r\n        /* SetFile(e.target.files[0]); */\r\n        const cl = new SkynetClient(\"https://siasky.net/\");\r\n        console.log(File)\r\n        console.log(cl)\r\n        \r\n        \r\n        const sl = await cl.uploadFile(e.target.files[0]);\r\n        console.log(sl)\r\n        console.log('https://siasky.net/' + sl.skylink.substring(4))\r\n        alert('File uploaded')\r\n        \r\n\r\n        SetFile(sl.skylink.substring(4))\r\n        console.log(File)\r\n        \r\n    }\r\n\r\n    return (\r\n      <div className=\"bb\">\r\n        <div className=\"kl\">\r\n          <fieldset>\r\n          {/* <h2>{prKey}</h2> */}\r\n            <Form>\r\n              <Form.Group as={Row} controlId=\"formHorizontalEmail\" id=\"fo\">\r\n                <Form.Label id=\"lo\" column sm={2}>\r\n                  Name of the Token\r\n                </Form.Label>\r\n                <Col sm={10}>\r\n                  <Form.Control\r\n                    name=\"Name\"\r\n                    id=\"fc\"\r\n                    onChange={inputEvent}\r\n                    type=\"text\"\r\n                    value={Tkn.Name}\r\n                    placeholder=\"Name\"\r\n                  />\r\n                </Col>\r\n              </Form.Group>\r\n\r\n              {/* <Form.Group as={Row} controlId=\"formHorizontalPassword\">\r\n                    <Form.Label column sm={2}>\r\n                    Password\r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" />\r\n                    </Col>\r\n                </Form.Group> */}\r\n\r\n              <Form.Group as={Row} controlId=\"formHorizontalEmail\" id=\"fo\">\r\n                <Form.Label id=\"lo\" column sm={2}>\r\n                  Symbol\r\n                </Form.Label>\r\n                <Col sm={10}>\r\n                  <Form.Control\r\n                    name=\"Sym\"\r\n                    id=\"fc\"\r\n                    onChange={inputEvent}\r\n                    type=\"text\"\r\n                    value={Tkn.Sym}\r\n                    placeholder=\"Symbol (Not for NFT)\"\r\n                  />\r\n                </Col>\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Row} controlId=\"formHorizontalEmail\" id=\"fo\">\r\n                <Form.Label id=\"lo\" column sm={2}>\r\n                  Description\r\n                </Form.Label>\r\n                <Col sm={10}>\r\n                  <Form.Control\r\n                    name=\"Desc\"\r\n                    id=\"fc\"\r\n                    onChange={inputEvent}\r\n                    type=\"text\"\r\n                    value={Tkn.Desc}\r\n                    placeholder=\"Description\"\r\n                  />\r\n                </Col>\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Row} controlId=\"formHorizontalEmail\" id=\"fo\">\r\n                <Form.Label id=\"lo\" column sm={2}>\r\n                  Amount\r\n                </Form.Label>\r\n                <Col sm={10}>\r\n                  <Form.Control\r\n                    name=\"Amt\"\r\n                    id=\"fc\"\r\n                    onChange={inputEvent}\r\n                    type=\"text\"\r\n                    value={Tkn.Amt}\r\n                    placeholder=\"Amount (Not for NFT)\"\r\n                  />\r\n                </Col>\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Row} controlId=\"formHorizontalEmail\" id=\"fo\">\r\n                <Form.Label id=\"lo\" column sm={2}>\r\n                  Price\r\n                </Form.Label>\r\n                <Col sm={10}>\r\n                  <Form.Control\r\n                    name=\"Price\"\r\n                    id=\"fc\"\r\n                    onChange={inputEvent}\r\n                    type=\"text\"\r\n                    value={Tkn.Price}\r\n                    placeholder=\"Price\"\r\n                  />\r\n                </Col>\r\n              </Form.Group>\r\n\r\n              {/* <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                    <Form.Label column sm={2}>\r\n                    Public Address\r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                    <Form.Control onChange={inputEvent} type=\"text\" value={Tkn.PbAdd} placeholder=\"Public Address\" />\r\n                    </Col>\r\n                </Form.Group> */}\r\n\r\n              <Form.Group>\r\n                <Form.Label id=\"lo\" column sm={2}>\r\n                  Insert_File\r\n                </Form.Label>\r\n                <Form.File name=\"File\" onChange={file} id=\"FormControlFile\" />\r\n              </Form.Group>\r\n              <>\r\n                {/* <Form.Group as={Row}>\r\n                    <Form.Label className=\"gf\" as=\"legend\" column sm={2}>\r\n                        Type of Token\r\n                    </Form.Label>\r\n                    <Col id=\"jh\" s<Button  id=\"bt\" className=\"bt1\" onClick={Nft} variant=\"contained\" color=\"primary\" type=\"submit\" >NFT</Button>m={10}>\r\n                        <Form.Check\r\n                        type=\"radio\"\r\n                        label=\"Normal Token\"\r\n                        name=\"formHorizontalRadios\"\r\n                        id=\"formHorizontalRadios1\"\r\n                        />\r\n                        <Form.Check\r\n                        type=\"radio\"\r\n                        label=\"NFT \"\r\n                        name=\"formHorizontalRadios\"\r\n                        id=\"formHorizontalRadios2\"\r\n                        />\r\n                    </Col>\r\n                    </Form.Group> */}\r\n              </>\r\n              {/* <Form.Group as={Row} controlId=\"formHorizontalCheck\">\r\n                    <Col sm={{ span: 10, offset: 2 }}>\r\n                    <Form.Check label=\"Remember me\" />\r\n                    </Col>\r\n                </Form.Group> */}\r\n\r\n              <Form.Group as={Row}>\r\n                <Col sm={{ span: 10, offset: 2 }}>\r\n                  <Button\r\n                    id=\"bt\"\r\n                    onClick={onSubmit}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                  >\r\n                    Create\r\n                  </Button>\r\n                  <Button\r\n                    id=\"bt\"\r\n                    className=\"bt1\"\r\n                    onClick={Nft}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                  >\r\n                    NFT\r\n                  </Button>\r\n                  <Button\r\n                    id=\"bt\"\r\n                    className=\"bt1\"\r\n                    onClick={Dnft}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                  >\r\n                    DNFT\r\n                  </Button>\r\n                </Col>\r\n              </Form.Group>\r\n            </Form>\r\n          </fieldset>\r\n        </div>\r\n      </div>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport { Card, OverlayTrigger, Tooltip, Image } from \"react-bootstrap\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport {\r\n  Client,\r\n  TransferTransaction,\r\n  TokenAssociateTransaction,\r\n  PrivateKey,\r\n} from \"@hashgraph/sdk\";\r\n\r\n\r\nlet a;\r\nexport default function ColorCard(props) {\r\n  /* const buy = async () => {\r\n    const client = Client.forTestnet();\r\n    client.setOperator(SellerAccId, SellerPrKey);\r\n\r\n    \r\n    const g = await new TopicMessageQuery()\r\n      .setTopicId(newTopicId)\r\n      .setStartTime(0)\r\n      .subscribe(client, (message) =>\r\n        console.log(Buffer.from(message.contents, \"utf8\").toString())\r\n      );\r\n\r\n    console.log(g);\r\n    \r\n  }; */\r\n\r\n    var color =\r\n      \"rgb(\" +\r\n      props.K.Description[0] +\r\n      \",\" +\r\n      props.K.Description[1] +\r\n      \",\" +\r\n      props.K.Description[2] +\r\n      \")\";\r\n      /* console.log(color) */\r\n    const styleObj = {\r\n      backgroundColor: color,\r\n    };\r\n\r\n  return (\r\n    <div id=\"mcc1\" style={styleObj}>\r\n      <Card id=\"ccc\">\r\n        <div id=\"cpad\" style={styleObj}></div>\r\n        <Card.Body>\r\n          <Card.Title id=\"kl\">Topic Id : {props.K.Name}</Card.Title>\r\n\r\n          <div id=\"ot1\">\r\n            <OverlayTrigger\r\n              placement=\"bottom\"\r\n              overlay={\r\n                <Tooltip id=\"button-tooltip-2\">{props.K.Creator}</Tooltip>\r\n              }\r\n            >\r\n              {({ ref, ...triggerHandler }) => (\r\n                <Button\r\n                  id=\"bt1\"\r\n                  variant=\"light\"\r\n                  {...triggerHandler}\r\n                  className=\"d-inline-flex align-items-center\"\r\n                >\r\n                  <Image\r\n                    id=\"cim\"\r\n                    ref={ref}\r\n                    roundedCircle\r\n                    src=\"https://www.microsoft.com/en-us/research/wp-content/themes/microsoft-research-theme/assets/images/svg/icon-people-circle.svg\"\r\n                    height=\"20px\"\r\n                    width=\"20px\"\r\n                  />\r\n                  <span className=\"ml-1\">Hover to see Creator</span>\r\n                </Button>\r\n              )}\r\n            </OverlayTrigger>\r\n            ,\r\n          </div>\r\n          <Card.Text id=\"gl\"> Token Id = {props.K.TokenId}</Card.Text>\r\n          <div id=\"jkl\"></div>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect , useContext } from \"react\";\r\nimport firebase from \"../utils/firebase\";\r\nimport ColorCard from \"../component/ColorCard\";\r\n\r\nimport { LoginContext } from \"./LoginContext\";\r\nimport { Client, AccountBalanceQuery, PrivateKey } from \"@hashgraph/sdk\";\r\n\r\nexport default function MyColor() {\r\n\r\n\r\n    let NAccId;\r\n    \r\n    const { prKey } = useContext(LoginContext);\r\n    \r\n    const NPrKey = PrivateKey.fromString(prKey);\r\n\r\n    const NPblKey = NPrKey.publicKey;\r\n    \r\n\r\n    firebase\r\n    .firestore()\r\n    .collection(\"User\")\r\n    .doc(NPblKey.toString())\r\n    .get()\r\n    .then((doc) => {\r\n        \r\n        NAccId = doc.data().AccId;\r\n\r\n        localStorage.setItem(\"H\", NAccId);\r\n    });\r\n\r\n\r\n\r\n  const [K, SetK] = useState([]);\r\n\r\n  useEffect(() => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"Color\")\r\n      .onSnapshot((snapshot) => {\r\n        SetK(snapshot.docs.map((doc) => doc.data()));\r\n\r\n        console.log(K);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"hh\">\r\n      {K.map((K, index) => (\r\n        <>\r\n          <ColorCard K={K} />\r\n        </>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Card, OverlayTrigger, Tooltip, Image } from \"react-bootstrap\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport {\r\n  Client,\r\n  TransferTransaction,\r\n  TokenAssociateTransaction,\r\n  PrivateKey,\r\n} from \"@hashgraph/sdk\";\r\n\r\nconst SellerAccId = \"0.0.301906\";\r\nconst SellerPblKey =\r\n  \"0x302a300506032b657003210044c714812aec04be8c2c2704d4f0432f49b2f2b3350aa69fdc9b9715de9a8d9a\";\r\nconst SellerPrKey =\r\n  \"0x302e020100300506032b65700422042092d0f20b0324b71b55bf397a85c214bbb66e98c8869911fb30dd7b6a0d60b7a4\";\r\n\r\nconst tokenId = \"0.0.303341\";\r\n\r\nconst accountId = \"0.0.303460\";\r\nconst publicKey =\r\n  \"302a300506032b65700321002ee57aad815e3597b7815728315e51bf42fbd867e32b9deb40d1f483cfc9ea6e\";\r\nconst privateKey =\r\n  \"302e020100300506032b6570042204201026b742d1ee8cb5a0141652191e0b63ec92719c53ab8ed59d98e6fc8f21ce45\";\r\n\r\nlet a;\r\nexport default function NFTCard(props) {\r\n  \r\n  \r\n   /*  const [Numb, SetNumb] = useState(\"\"); */\r\n\r\n  /* const numb = async (e) => {\r\n    a = e.target.value;\r\n    console.log(a);\r\n    SetNumb(e.target.value);\r\n    console.log(Numb);\r\n    console.log(props.K.TokenId);\r\n  }; */\r\n\r\n  const buy = async () => {\r\n    const client = Client.forTestnet();\r\n    client.setOperator(SellerAccId, SellerPrKey);\r\n\r\n    const transaction = await new TokenAssociateTransaction()\r\n      .setAccountId(accountId)\r\n      .setTokenIds([props.K.TokenId])\r\n      .freezeWith(client);\r\n\r\n    //Sign with the private key of the account that is being associated to a token\r\n    const signTx = await transaction.sign(PrivateKey.fromString(privateKey));\r\n\r\n    //Submit the transaction to a Hedera network\r\n    const txResponse = await signTx.execute(client);\r\n\r\n    //Request the receipt of the transaction\r\n    const receipt = await txResponse.getReceipt(client);\r\n\r\n    //Get the transaction consensus status\r\n    const transactionStatus = receipt.status;\r\n\r\n    console.log(\r\n      \"The transaction consensus status \" + transactionStatus.toString()\r\n    );\r\n\r\n    const tx = await new TransferTransaction()\r\n      .addTokenTransfer(props.K.TokenId, SellerAccId, -1)\r\n      .addTokenTransfer(props.K.TokenId, accountId, 1)\r\n      .freezeWith(client);\r\n\r\n    //Sign with the sender account private key\r\n    const sign = await tx.sign(PrivateKey.fromString(SellerPrKey));\r\n\r\n    //Sign with the client operator private key and submit to a Hedera network\r\n    const txResponse1 = await sign.execute(client);\r\n\r\n    //Request the receipt of the transaction\r\n    const receipt1 = await txResponse1.getReceipt(client);\r\n\r\n    //Obtain the transaction consensus status\r\n    const transactionStatus1 = receipt1.status;\r\n\r\n    console.log(\r\n      \"The transaction consensus status \" + transactionStatus1.toString()\r\n    );\r\n\r\n    const txn = await new TransferTransaction()\r\n      .addHbarTransfer(SellerAccId, (props.K.Price))\r\n      .addHbarTransfer(accountId, -(props.K.Price))\r\n\r\n      .freezeWith(client);\r\n\r\n    //Sign with the sender account private key\r\n    const sign2 = await txn.sign(PrivateKey.fromString(privateKey));\r\n\r\n    //Sign with the client operator private key and submit to a Hedera network\r\n    const txResponse2 = await sign2.execute(client);\r\n\r\n    //Request the receipt of the transaction\r\n    const receipt2 = await txResponse2.getReceipt(client);\r\n\r\n    //Obtain the transaction consensus status\r\n    const transactionStatus2 = receipt2.status;\r\n\r\n    console.log(\r\n      \"The transaction consensus status \" + transactionStatus1.toString()\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div id=\"mcc\">\r\n      <Card id=\"cc\">\r\n        <Card.Img\r\n          id=\"pic\"\r\n          variant=\"top\"\r\n          src=\"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse2.mm.bing.net%2Fth%3Fid%3DOIP.F-IJbSlaGkoaH8X5IqBqZgHaHa%26pid%3DApi&f=1\"\r\n        />\r\n\r\n        <Card.Body>\r\n          <Card.Title id=\"kl\">{props.K.Name}</Card.Title>\r\n\r\n          <Card.Text id=\"gg\"><strong>Description:</strong> {props.K.Description}</Card.Text>\r\n          <div id=\"ot\">\r\n            <OverlayTrigger\r\n              placement=\"bottom\"\r\n              overlay={\r\n                <Tooltip id=\"button-tooltip-2\">{props.K.Creator}</Tooltip>\r\n              }\r\n            >\r\n              {({ ref, ...triggerHandler }) => (\r\n                <Button\r\n                  id=\"bt1\"\r\n                  variant=\"light\"\r\n                  {...triggerHandler}\r\n                  className=\"d-inline-flex align-items-center\"\r\n                >\r\n                  <Image\r\n                    id=\"cim\"\r\n                    ref={ref}\r\n                    roundedCircle\r\n                    src=\"https://www.microsoft.com/en-us/research/wp-content/themes/microsoft-research-theme/assets/images/svg/icon-people-circle.svg\"\r\n                    height=\"20px\"\r\n                    width=\"20px\"\r\n                  />\r\n                  <span className=\"ml-1\">Hover to see Creator</span>\r\n                </Button>\r\n              )}\r\n            </OverlayTrigger>\r\n            ,\r\n          </div>\r\n\r\n          {/* <Card.Text id=\"gg\">\r\n                              {props.K.Creator}\r\n                            </Card.Text> */}\r\n          <Card.Text id=\"gl\">Amount: {props.K.Amount}</Card.Text>\r\n          <div id=\"ot\">\r\n            <OverlayTrigger\r\n              placement=\"bottom\"\r\n              overlay={\r\n                <Tooltip id=\"button-tooltip-2\">{props.K.Symbol}</Tooltip>\r\n              }\r\n            >\r\n              {({ ref, ...triggerHandler }) => (\r\n                <Button\r\n                  id=\"bt1\"\r\n                  variant=\"light\"\r\n                  {...triggerHandler}\r\n                  className=\"d-inline-flex align-items-center\"\r\n                >\r\n                  <Image\r\n                    id=\"cim\"\r\n                    ref={ref}\r\n                    roundedCircle\r\n                    src=\"https://www.microsoft.com/en-us/research/wp-content/themes/microsoft-research-theme/assets/images/svg/icon-people-circle.svg\"\r\n                    height=\"20px\"\r\n                    width=\"20px\"\r\n                  />\r\n                  <span className=\"ml-1\">Hover to see Symbol</span>\r\n                </Button>\r\n              )}\r\n            </OverlayTrigger>\r\n            ,\r\n          </div>\r\n          {/* <Card.Text id=\"gl\">Symbol: {props.K.Symbol }</Card.Text> */}\r\n          <Card.Text id=\"gl\">Price: {props.K.Price}</Card.Text>\r\n\r\n          <div id=\"jkll\">\r\n            \r\n            <Button onClick={buy} variant=\"contained\" color=\"primary\">\r\n              Buy\r\n            </Button>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport firebase from \"../utils/firebase\";\r\nimport NFTCard from \"../component/NFTCard\";\r\nimport \"./Event.css\";\r\n\r\nexport default function NFT() {\r\n  const [K, SetK] = useState([]);\r\n\r\n  useEffect(() => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"NFT\")\r\n      .onSnapshot((snapshot) => {\r\n        SetK(snapshot.docs.map((doc) => doc.data()));\r\n\r\n        console.log(K);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"hh\">\r\n      {K.map((K, index) => (\r\n        <>\r\n          <NFTCard K={K} />\r\n        </>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\n{\r\n  /* <div className=\"hh\">\r\n            {event.map((event, index) => \r\n                    <>\r\n                      <div className=\"cardlist\">    \r\n                      <Card className=\"gh\" style={{ width: '18rem' }}>\r\n                        <Card.Img className =\"pic\" variant=\"top\" src={event.poster} />\r\n                        <Card.Body>\r\n                            <Card.Title className=\"kl\">{event.title}</Card.Title>\r\n                            <Card.Text className=\"gg\">\r\n                            Some quick example text to build on the card title and make up the bulk of\r\n                            the card's content.\r\n                            </Card.Text>\r\n                            <Card.Text className=\"gl\">{event.amount}</Card.Text>\r\n                            <Button onClick={buy} id=\"jkl\" variant=\"contained\" color=\"primary\">Buy</Button>\r\n                        </Card.Body>\r\n                        </Card>\r\n                      </div>  \r\n                    </>\r\n                )}\r\n        </div> */\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Card, OverlayTrigger, Tooltip, Image } from \"react-bootstrap\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport {\r\n  Client,\r\n  TransferTransaction,\r\n  TokenAssociateTransaction,\r\n  PrivateKey,\r\n} from \"@hashgraph/sdk\";\r\n\r\nconst SellerAccId = \"0.0.301906\";\r\nconst SellerPblKey =\r\n  \"0x302a300506032b657003210044c714812aec04be8c2c2704d4f0432f49b2f2b3350aa69fdc9b9715de9a8d9a\";\r\nconst SellerPrKey =\r\n  \"0x302e020100300506032b65700422042092d0f20b0324b71b55bf397a85c214bbb66e98c8869911fb30dd7b6a0d60b7a4\";\r\n\r\nconst tokenId = \"0.0.303341\";\r\n\r\nconst accountId = \"0.0.303460\";\r\nconst publicKey =\r\n  \"302a300506032b65700321002ee57aad815e3597b7815728315e51bf42fbd867e32b9deb40d1f483cfc9ea6e\";\r\nconst privateKey =\r\n  \"302e020100300506032b6570042204201026b742d1ee8cb5a0141652191e0b63ec92719c53ab8ed59d98e6fc8f21ce45\";\r\n\r\nlet a;\r\nexport default function DNFTCard(props) {\r\n   const [Numb, SetNumb] = useState(\"\");\r\n\r\n  const numb = async (e) => {\r\n    a = e.target.value;\r\n    console.log(a);\r\n    SetNumb(e.target.value);\r\n    console.log(Numb);\r\n    \r\n  };\r\n\r\n  const buy = async () => {\r\n    const client = Client.forTestnet();\r\n    client.setOperator(SellerAccId, SellerPrKey);\r\n\r\n    const transaction = await new TokenAssociateTransaction()\r\n      .setAccountId(accountId)\r\n      .setTokenIds([props.K.TokenId])\r\n      .freezeWith(client);\r\n\r\n    //Sign with the private key of the account that is being associated to a token\r\n    const signTx = await transaction.sign(PrivateKey.fromString(privateKey));\r\n\r\n    //Submit the transaction to a Hedera network\r\n    const txResponse = await signTx.execute(client);\r\n\r\n    //Request the receipt of the transaction\r\n    const receipt = await txResponse.getReceipt(client);\r\n\r\n    //Get the transaction consensus status\r\n    const transactionStatus = receipt.status;\r\n\r\n    console.log(\r\n      \"The transaction consensus status \" + transactionStatus.toString()\r\n    );\r\n\r\n    const tx = await new TransferTransaction()\r\n      .addTokenTransfer(props.K.TokenId, SellerAccId, -(Numb))\r\n      .addTokenTransfer(props.K.TokenId, accountId, (Numb))\r\n      .freezeWith(client);\r\n\r\n    //Sign with the sender account private key\r\n    const sign = await tx.sign(PrivateKey.fromString(SellerPrKey));\r\n\r\n    //Sign with the client operator private key and submit to a Hedera network\r\n    const txResponse1 = await sign.execute(client);\r\n\r\n    //Request the receipt of the transaction\r\n    const receipt1 = await txResponse1.getReceipt(client);\r\n\r\n    //Obtain the transaction consensus status\r\n    const transactionStatus1 = receipt1.status;\r\n\r\n    console.log(\r\n      \"The transaction consensus status \" + transactionStatus1.toString()\r\n    );\r\n\r\n    const txn = await new TransferTransaction()\r\n      .addHbarTransfer(SellerAccId, props.K.Price)\r\n      .addHbarTransfer(accountId, -props.K.Price)\r\n\r\n      .freezeWith(client);\r\n\r\n    //Sign with the sender account private key\r\n    const sign2 = await txn.sign(PrivateKey.fromString(privateKey));\r\n\r\n    //Sign with the client operator private key and submit to a Hedera network\r\n    const txResponse2 = await sign2.execute(client);\r\n\r\n    //Request the receipt of the transaction\r\n    const receipt2 = await txResponse2.getReceipt(client);\r\n\r\n    //Obtain the transaction consensus status\r\n    const transactionStatus2 = receipt2.status;\r\n\r\n    console.log(\r\n      \"The transaction consensus status \" + transactionStatus1.toString()\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div id=\"mcc\">\r\n      <Card id=\"cc\">\r\n        <Card.Img\r\n          id=\"pic\"\r\n          variant=\"top\"\r\n          src=\"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse2.mm.bing.net%2Fth%3Fid%3DOIP.F-IJbSlaGkoaH8X5IqBqZgHaHa%26pid%3DApi&f=1\"\r\n        />\r\n\r\n        <Card.Body>\r\n          <Card.Title id=\"kl\">{props.K.Name}</Card.Title>\r\n\r\n          <Card.Text id=\"gg\"><strong>Description:</strong> {props.K.Description}</Card.Text>\r\n          <div id=\"ot\">\r\n            <OverlayTrigger\r\n              placement=\"bottom\"\r\n              overlay={\r\n                <Tooltip id=\"button-tooltip-2\">{props.K.Creator}</Tooltip>\r\n              }\r\n            >\r\n              {({ ref, ...triggerHandler }) => (\r\n                <Button\r\n                  id=\"bt1\"\r\n                  variant=\"light\"\r\n                  {...triggerHandler}\r\n                  className=\"d-inline-flex align-items-center\"\r\n                >\r\n                  <Image\r\n                    id=\"cim\"\r\n                    ref={ref}\r\n                    roundedCircle\r\n                    src=\"https://www.microsoft.com/en-us/research/wp-content/themes/microsoft-research-theme/assets/images/svg/icon-people-circle.svg\"\r\n                    height=\"20px\"\r\n                    width=\"20px\"\r\n                  />\r\n                  <span className=\"ml-1\">Hover to see Creator</span>\r\n                </Button>\r\n              )}\r\n            </OverlayTrigger>\r\n            ,\r\n          </div>\r\n\r\n          {/* <Card.Text id=\"gg\">\r\n                              {props.K.Creator}\r\n                            </Card.Text> */}\r\n          <Card.Text id=\"gl\">Amount: {props.K.Amount}</Card.Text>\r\n          <div id=\"ot\">\r\n            <OverlayTrigger\r\n              placement=\"bottom\"\r\n              overlay={\r\n                <Tooltip id=\"button-tooltip-2\">{props.K.Symbol}</Tooltip>\r\n              }\r\n            >\r\n              {({ ref, ...triggerHandler }) => (\r\n                <Button\r\n                  id=\"bt1\"\r\n                  variant=\"light\"\r\n                  {...triggerHandler}\r\n                  className=\"d-inline-flex align-items-center\"\r\n                >\r\n                  <Image\r\n                    id=\"cim\"\r\n                    ref={ref}\r\n                    roundedCircle\r\n                    src=\"https://www.microsoft.com/en-us/research/wp-content/themes/microsoft-research-theme/assets/images/svg/icon-people-circle.svg\"\r\n                    height=\"20px\"\r\n                    width=\"20px\"\r\n                  />\r\n                  <span className=\"ml-1\">Hover to see Symbol</span>\r\n                </Button>\r\n              )}\r\n            </OverlayTrigger>\r\n            ,\r\n          </div>\r\n          {/* <Card.Text id=\"gl\">Symbol: {props.K.Symbol }</Card.Text> */}\r\n          <Card.Text id=\"gl\">Price: {props.K.Price}</Card.Text>\r\n\r\n          <div id=\"jkl\">\r\n            <input\r\n              value={Numb}\r\n              onChange={numb}\r\n              id=\"in\"\r\n              type=\"number\"\r\n              placeholder=\"Number of Ticket\"\r\n            ></input>\r\n            <Button onClick={buy} variant=\"contained\" color=\"primary\">\r\n              Buy\r\n            </Button>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport firebase from \"../utils/firebase\";\r\nimport DNFTCard from \"../component/DNFTCard\";\r\nimport \"./Event.css\";\r\n\r\nexport default function DNFT() {\r\n  const [K, SetK] = useState([]);\r\n\r\n  useEffect(() => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"DNFT\")\r\n      .onSnapshot((snapshot) => {\r\n        SetK(snapshot.docs.map((doc) => doc.data()));\r\n\r\n        console.log(K);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"hh\">\r\n      {K.map((K, index) => (\r\n        <>\r\n          <DNFTCard K={K} />\r\n        </>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\n{\r\n  /* <div className=\"hh\">\r\n            {event.map((event, index) => \r\n                    <>\r\n                      <div className=\"cardlist\">    \r\n                      <Card className=\"gh\" style={{ width: '18rem' }}>\r\n                        <Card.Img className =\"pic\" variant=\"top\" src={event.poster} />\r\n                        <Card.Body>\r\n                            <Card.Title className=\"kl\">{event.title}</Card.Title>\r\n                            <Card.Text className=\"gg\">\r\n                            Some quick example text to build on the card title and make up the bulk of\r\n                            the card's content.\r\n                            </Card.Text>\r\n                            <Card.Text className=\"gl\">{event.amount}</Card.Text>\r\n                            <Button onClick={buy} id=\"jkl\" variant=\"contained\" color=\"primary\">Buy</Button>\r\n                        </Card.Body>\r\n                        </Card>\r\n                      </div>  \r\n                    </>\r\n                )}\r\n        </div> */\r\n}\r\n","import React,{useState,useContext} from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as  Router, Switch , Route } from 'react-router-dom';\r\nimport Header from './Header'\r\nimport Login from '../src/screens/Login'\r\nimport Home from '../src/screens/Home'\r\nimport PK from '../src/screens/PrivateKey'\r\nimport Color from '../src/screens/Color'\r\nimport Mne from '../src/screens/Mnemonic'\r\nimport Event from '../src/screens/Event'\r\nimport TicketList from './screens/TicketList';\r\nimport CreateToken from './screens/CreateToken';\r\nimport MyColor from './screens/MyColor';\r\nimport {LoginContext} from \"./screens/LoginContext\";\r\nimport NFT from './screens/NFT';\r\nimport DNFT from \"./screens/DNFT\";\r\n\r\nfunction App() {\r\n  const [prKey , setPrKey ] = useState('');\r\n  \r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <LoginContext.Provider value={{ prKey, setPrKey }}>\r\n          <Switch>\r\n            <Route path=\"/create\">\r\n              <Header />\r\n              <CreateToken />\r\n            </Route>\r\n            <Route path=\"/market\">\r\n              <Header />\r\n              <Event />\r\n            </Route>\r\n            <Route path=\"/nft\">\r\n              <Header />\r\n              <NFT />\r\n            </Route>\r\n            <Route path=\"/dnft\">\r\n              <Header />\r\n              <DNFT />\r\n            </Route>\r\n            <Route path=\"/ticket\">\r\n              <Header />\r\n              <TicketList />\r\n            </Route>\r\n            <Route path=\"/Mnemonic\">\r\n              <Mne />\r\n            </Route>\r\n            <Route path=\"/privateKey\">\r\n              <PK />\r\n            </Route>\r\n            <Route path=\"/color\">\r\n              <Header />\r\n              <Color />\r\n            </Route>\r\n            <Route path=\"/MyColor\">\r\n              <Header />\r\n              <MyColor />\r\n            </Route>\r\n            <Route path=\"/home\">\r\n              <Header />\r\n              <Home />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <Login />\r\n            </Route>\r\n          </Switch>\r\n        </LoginContext.Provider>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}